################################################################################
# JSON-Testbench Configuration File
################################################################################

# Optional Meta Data #
Company: 
Engineer: 
Project_Name: 
Target_Devices: 
Tool_Versions: 
Description: 
Dependencies: 

# Required Data #
Module_Name: am_rx
Timescale: 1ns / 1ps #the default timescale of the simulation
Time_Format: {unit: "1us", precision: 3} #can be one of s, ms, us, ns, ps, fs
Flag_Count: 1

Interfaces:
  - axis

################################################################################

# DUT #
DUT:
  - {direction: input, name: ap_clk, type: clock, period: 20ns}
  - {direction: input, name: ap_rst_n}
  - {direction: output, size: 32, name: dbg_currentState}
  - {direction: master, name: axis_handler, type: axis, clock: ap_clk, c_struct: axis_word, 
  channels: [
      {name: "TDATA", type: "tdata", size: 64},
      {name: "TVALID", type: "tvalid"},
      {name: "TREADY", type: "tready"},
      {name: "TLAST", type: "tlast"}
    ]}
  - {direction: slave, name: axis_net, type: axis, clock: ap_clk, c_struct: axis_word, 
  channels: [
      {name: "TDATA", type: "tdata", size: 64},
      {name: "TVALID", type: "tvalid"},
      {name: "TREADY", type: "tready"},
      {name: "TLAST", type: "tlast"}
    ]}
  - {direction: master, name: axis_s2mmCommand, type: axis, clock: ap_clk, c_struct: axis_word_s2mmCommand, 
  channels: [
      {name: "TDATA", type: "tdata", size: 64},
      {name: "TVALID", type: "tvalid"},
      {name: "TREADY", type: "tready"},
      {name: "TLAST", type: "tlast"}
    ]}
  - {direction: master, name: axis_s2mm, type: axis, clock: ap_clk, c_struct: axis_word, 
  channels: [
      {name: "TDATA", type: "tdata", size: 64},
      {name: "TVALID", type: "tvalid"},
      {name: "TREADY", type: "tready"},
      {name: "TLAST", type: "tlast"}
    ]}
  - {direction: slave, name: axis_s2mmStatus, type: axis, clock: ap_clk, c_struct: axis_word_s2mmStatus, 
  channels: [
      {name: "TDATA", type: "tdata", size: 8},
      {name: "TVALID", type: "tvalid"},
      {name: "TREADY", type: "tready"},
      {name: "TLAST", type: "tlast"}
    ]}
  - {direction: output, name: release_V}

################################################################################

Initialize: &Initialize
  - wait: {key: ap_clk}
  - macro: INIT_SIGNALS
  - delay: 40ns
  - signal:
    - {name: ap_rst_n, value: 1}
    - {name: "axis_handler_TREADY", value: 1}
    - {name: "axis_s2mmCommand_TREADY", value: 1}
    - {name: "axis_s2mm_TREADY", value: 1}

Short_Message_A: &Short_Message_A
  - Parallel_Section_0: *Initialize
  - Parallel_Section_1:
    - delay: 100ns
    - timestamp: INIT
    - interface: {type: axis, name: axis_net, payload: [
      {tdata: "{AMHeader,0xAA,0xCC,0,0xE,1,2}", tkeep: "KEEP_ALL", callTB: 1},
      {tdata: "{AMToken,0x0}", callTB: 1},
      {tdata: 0xDEADBEEF},
      {tdata: 0x1234, tlast: 1, callTB: 2}
    ]}
  - Parallel_Section_2:
    - interface: {type: axis, name: axis_handler, payload: [
      {tdata: "{AMHeader,0xAA,0xCC,0,0xE,1,2}"},
      {tdata: "{AMToken,0x0}"},
      {tdata: 0xDEADBEEF},
      {tdata: 0x1234, tlast: 1}
    ]}
    - timestamp: Short_Message_A
    - macro: END

Short_Message_B: &Short_Message_B
  - Parallel_Section_0: *Initialize
  - Parallel_Section_1:
    - delay: 100ns
    - timestamp: INIT
    - interface: {type: axis, name: axis_net, payload: [
      {tdata: "{AMHeader,0xAA,0xCC,0,0xE,1,0}", tkeep: "KEEP_ALL", callTB: 1},
      {tdata: "{AMToken,0x1}", callTB: 2}
    ]}
  - Parallel_Section_2:
    - interface: {type: axis, name: axis_handler, payload: [
      {tdata: "{AMHeader,0xAA,0xCC,0,0xE,1,0}"},
      {tdata: "{AMToken,0x1}"}
    ]}
    - timestamp: Short_Message_B
    - macro: END

Medium_Message_A: &Medium_Message_A
  - Parallel_Section_0: *Initialize
  - Parallel_Section_1:
    - delay: 100ns
    - timestamp: INIT
    - interface: {type: axis, name: axis_net, payload: [
      {tdata: "{AMHeader,0xAA,0xCC,1,0xE,2,0}", tkeep: "KEEP_ALL", callTB: 1},
      {tdata: "{AMToken,0x2}", callTB: 1},
      {tdata: "0xDEADBEEF", tlast: 1, callTB: 2}
    ]}
  - Parallel_Section_2:
    - interface: {type: axis, name: axis_handler, payload: [
      {tdata: "{AMHeader,0xAA,0xCC,1,0xE,2,0}"},
      {tdata: "{AMToken,0x2}"},
      {tdata: "0xDEADBEEF", tlast: 1}
    ]}
    - timestamp: Medium_Message_A
    - macro: END

Medium_Message_B: &Medium_Message_B
  - Parallel_Section_0: *Initialize
  - Parallel_Section_1:
    - delay: 100ns
    - timestamp: INIT
    - interface: {type: axis, name: axis_net, payload: [
      {tdata: "{AMHeader,0xAA,0xCC,0x100,0xE,2,6}", tkeep: "KEEP_ALL", callTB: 1},
      {tdata: "{AMToken,0x3}", callTB: 1},
      {loop: { start: 0, end: 5, body: [
        {tdata: "0x98765432"}
      ]}},
      {tdata: "0x98765432", callTB: 1},
      {loop: { start: 0, end: 255, body: [
        {tdata: "0xDEADBEEF"}
      ]}},
      {tdata: "0xFEEDDEED", callTB: 2, tlast: 1}
    ]}
  - Parallel_Section_2:
    - interface: {type: axis, name: axis_handler, payload: [
      {tdata: "{AMHeader,0xAA,0xCC,0x100,0xE,2,6}", tkeep: "KEEP_ALL"},
      {tdata: "{AMToken,0x3}"},
      {loop: { start: 0, end: 5, body: [
        {tdata: "0x98765432"}
      ]}},
      {tdata: "0x98765432"},
      {loop: { start: 0, end: 255, body: [
        {tdata: "0xDEADBEEF"}
      ]}},
      {tdata: "0xFEEDDEED", tlast: 1}
    ]}
    - timestamp: Medium_Message_B
    - macro: END

# Long Message A
Long_Message_A: &Long_Message_A
  - Parallel_Section_0: *Initialize
  - Parallel_Section_1:
    - delay: 100ns
    - timestamp: INIT
    - interface: {type: axis, name: axis_net, payload: [
      {tdata: "{AMHeader,0xAA,0xCC,0x100,0xE,4,0}", callTB: 1},
      {tdata: "{AMToken,0x4}", callTB: 1},
      {tdata: "0xAABBCCD8", callTB: 1},
      {loop: { start: 0, end: 255, body: [
        {tdata: "0xDEADBEEF"}
      ]}},
      {tdata: "0xDEADBEEF", callTB: 1, tlast: 1}
    ]}
  - Parallel_Section_2:
    - interface: {type: axis, name: axis_handler, payload: [
      {tdata: "{AMHeader,0xAA,0xCC,0x100,0xE,4,0}"},
      {tdata: "{AMToken,0x4}"},
      {tdata: "0xAABBCCD8"}
    ]}
    - interface: {type: axis, name: axis_s2mm, payload: [
      {loop: { start: 0, end: 255, body: [
        {tdata: "0xDEADBEEF"}
      ]}},
      {tdata: "0xDEADBEEF", tlast: 1}
    ]}
  - Parallel_Section_3:
    - interface: {type: axis, name: axis_s2mmCommand, payload: [
      {tdata: "{dataMoverCommand,0x800,1,0,1,0,0xAABBCCD8,0}"}
    ]}
  - Parallel_Section_4:
    - wait: {key: axis_s2mm_tlast, value: 1}
    - delay: 50ns
    - interface: {type: axis, name: axis_s2mmStatus, payload: [
      {tdata: "0x80", callTB: 1}
    ]}
    - timestamp: Long_Message_A
    - macro: END

# Long strided message from 0xAA to 0xCC with 0xC words of payload
# across two vectors. It calls handler 0xD with two handler args. Each 
# stride is 0x100 words, and it write 4 words each time
Long_Message_B: &Long_Message_B
  - Parallel_Section_0: *Initialize
  - Parallel_Section_1:
    - delay: 100ns
    - timestamp: INIT
    - interface: {type: axis, name: axis_net, payload: [
      {tdata: "{AMHeader,0xAA,0xCC,0xC,0xD,0x5,2}", callTB: 1},
      {tdata: "{AMLongStride,0x100,4,3,0x5}", callTB: 1},
      {tdata: 0, callTB: 1}, # initial address
      {tdata: "0xAABBCCDD", callTB: 0}, # handler arg 0
      {tdata: "0xDDCCBBAA", callTB: 1}, # handler arg 1
      {loop: { start: 0, end: 2, body: [
        {loop: { start: 0, end: 3, body: [
          {tdata: "0xBEEFDEAD"}
        ]}},
        {tdata: "0xDEADBEEF"}
      ]}},
      {loop: { start: 0, end: 3, body: [
        {tdata: "0xBEEFDEAD"}
      ]}},
      {tdata: "0xDEADBEEF", tlast: 1, callTB: 1}
    ]}
  - Parallel_Section_2:
    - interface: {type: axis, name: axis_s2mmCommand, payload: [
      {tdata: "{dataMoverCommand,0x20,1,0,1,0,0,0}"}
    ]}
    - interface: {type: axis, name: axis_s2mmCommand, payload: [
      {tdata: "{dataMoverCommand,0x20,1,0,1,0,0x100,0}"}
    ]}
    - interface: {type: axis, name: axis_s2mmCommand, payload: [
      {tdata: "{dataMoverCommand,0x20,1,0,1,0,0x200,0}"}
    ]}
  - Parallel_Section_3:
    - interface: {type: axis, name: axis_handler, payload: [
      {tdata: "{AMHeader,0xAA,0xCC,0xC,0xD,0x5,2}"},
      {tdata: "{AMLongStride,0x100,4,3,0x5}"},
      {tdata: 0}, # initial address
      {tdata: "0xAABBCCDD"}, # handler arg 0
      {tdata: "0xDDCCBBAA"} # handler arg 1
    ]}
    - interface: {type: axis, name: axis_s2mm, payload: [
      {loop: { start: 0, end: 3, body: [
        {loop: { start: 0, end: 3, body: [
          {tdata: "0xBEEFDEAD"}
        ]}},
        {tdata: "0xDEADBEEF", tlast: 1}
      ]}}
    ]}
    - timestamp: PRINT
    - delay: 50ns
    - interface: {type: axis, name: axis_s2mmStatus, payload: [
      {tdata: "0x80", callTB: 1}
    ]}
    - timestamp: Long_Message_B
    - macro: END

# Long vector message from 0xAA to 0xCC with 0x10C words of payload
# across two vectors. It calls handler 0xF with zero handler args. First 
# vector has 0xC words to address 0 and second has has 0x100 words to 
# address 0xFF00
Long_Message_C: &Long_Message_C
  - Parallel_Section_0: *Initialize
  - Parallel_Section_1:
    - delay: 100ns
    - timestamp: INIT
    - interface: {type: axis, name: axis_net, payload: [
      {tdata: "{AMHeader,type:0x6,src:0xAA,dst:0xCC,payload:0x10C,handler:0xF,args:0}", callTB: 1},
      {tdata: "{AMLongVector,dst:2,dstSize:0xC,token:0x6}"},
      {tdata: 0}, # destination 0
      {tdata: 0x100}, # size 1 
      {tdata: 0xFF00, callTB: 1}, # destination 1
      {loop: { start: 0, end: 3, body: [
        {loop: { start: 0, end: 3, body: [
          {tdata: "0xBEEFDEAD"}
        ]}},
        {tdata: "0xDEADBEEF"}
      ]}},
      {loop: { start: 0, end: 255, body: [
        {tdata: "0xFFAAFFAA"}
      ]}},
      {tdata: "0xDDDDDDDD", tlast: 1, callTB: 2}
    ]}
  - Parallel_Section_2:
    - interface: {type: axis, name: axis_handler, payload: [
      {tdata: "{AMHeader,0xAA,0xCC,0x10C,0xF,0x6,0}"},
      {tdata: "{AMLongVector,2,0xC,0x6}"}
    ]}
    - interface: {type: axis, name: axis_s2mm, payload: [
      {loop: { start: 0, end: 2, body: [
        {loop: { start: 0, end: 3, body: [
          {tdata: "0xBEEFDEAD"}
        ]}},
        {tdata: "0xDEADBEEF"}
      ]}},
      {loop: { start: 0, end: 3, body: [
        {tdata: "0xBEEFDEAD"}
      ]}},
      {tdata: "0xDEADBEEF", tlast: 1}
    ]}
    - interface: {type: axis, name: axis_s2mm, payload: [
      {loop: { start: 0, end: 255, body: [
        {tdata: 0xFFAAFFAA}
      ]}},
      {tdata: 0xDDDDDDDD, tlast: 1}
    ]}
  - Parallel_Section_3:
    - interface: {type: axis, name: axis_s2mmCommand, payload: [
      {tdata: "{dataMoverCommand,0x60,1,0,1,0,0,0}"}
    ]}
    - interface: {type: axis, name: axis_s2mmCommand, payload: [
      {tdata: "{dataMoverCommand,0x800,1,0,1,0,0xFF00,0}"}
    ]}
  - Parallel_Section_4:
    - wait: {key: axis_s2mm_tlast, value: 1}
    - wait: {key: axis_s2mm_tlast, value: 1}
    - delay: 50ns
    - interface: {type: axis, name: axis_s2mmStatus, payload: [
      {tdata: "0x80", callTB: 1}
    ]}
    - timestamp: Long_Message_C
    - macro: END
################################################################################

Wait_Conditions:
  - {condition: "wait(flags[$value]);", key: "flag"}
  - {condition: "wait(axis_s2mm_tlast == $value);", key: "axis_s2mm_tlast"}
  - {condition: "@(negedge ap_clk);", key: ap_clk}

Test_Vectors:
  # - Test_Vector_0: *Long_Message_B
  # - Test_Vector_0: *Short_Message_A
  # - Test_Vector_1: *Long_Message_B
  - Test_Vector_0: *Short_Message_A
  - Test_Vector_1: *Short_Message_B
  - Test_Vector_2: *Medium_Message_A
  - Test_Vector_3: *Medium_Message_B
  - Test_Vector_4: *Long_Message_A
  - Test_Vector_5: *Long_Message_B
  - Test_Vector_6: *Long_Message_C
  